@model IEnumerable<WebAccess.Models.AspNetUser>
           @using WebAccess.Models

@{
  
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    $(document).ready(function () {

        //---------------------Checks all box if top box is checked
        $("#showinactive").click(function () {
       
            $("#form").submit();
        });

    });
</script>


<ul class="breadcrumb">
    <li><a href="\Home">@VTTLanguages.Resources.Home</a></li>
    <li class="active">@VTTLanguages.Resources.Users</li>
</ul>

<h3>User Administration</h3>


  <p>@Html.ActionLink("Register New User", "RegisterByAdmin", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</p>
    


<form action="/Users/Index"  id="form" method="get">

    <div class="row">
        <div class="col-sm-1">Show Inactive Employees</div>
        <div class="col-sm-1">@Html.CheckBox("showinactive", (bool)ViewBag.showinactive, new { @class = "check-box" })</div>

        <div class="col-sm-2 col-sm-offset-7"><strong>Record Count: @Model.Count()</strong> </div>
    </div>
    <table class="table table-striped table-hover">
        <tr>
            <th>
                Locked
                @Html.Hidden("sort", (string)ViewBag.sort)
            </th>
            <th>
                @Html.ActionLink("First Name", "Index", new { sort = "firstname" })

            </th>
            <th>
                @Html.ActionLink("Last Name", "Index", new { sort = "lastname" })
            </th>
            <th>
                Email
            </th>

            <th>
                @Html.ActionLink("User Type", "Index", new { sort = "usertype" })
            </th>
            <th>
                @Html.ActionLink("Job Title", "Index", new { sort = "jobtitle" })
            </th>
            <th></th>
        </tr>
        @{
        IEnumerable<WebAccess.Models.AspNetUser> sorteduser;

        string sortby = (string)ViewBag.sort;

        sorteduser = Model;

        if (sortby == "firstname")
        {
            sorteduser = Model.OrderBy(x => x.FirstName);
        }

        if (sortby == "lastname")
        {
            sorteduser = Model.OrderBy(x => x.LastName);
        }

        if (sortby == "usertype")
        {
            sorteduser = Model.OrderBy(x => x.SysUserType.Description);
        }

        if (sortby == "jobtitle")
        {
            sorteduser = Model.OrderBy(x => x.Title);
        }


        }


        @foreach (var item in sorteduser)
    {
    <tr>

        @if (item.LockoutEndDateUtc > DateTime.Now.AddYears(1))
            {
            <td><font color="red">@Html.ActionLink("Unlock", "Unlock", new { id = item.Id })</font></td>
            }
            else
            {
            <td>&nbsp;</td>
            }


        <td>
            @Html.DisplayFor(modelItem => item.FirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
            @if (item.EmailConfirmed == false)
                {
                <font color="red">Not Confirmed</font>
                }

        </td>


        <td>
            @Html.DisplayFor(modelItem => item.SysUserType.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @{
            var count = 0;
            var count2 = 0;
            count = item.stores.Count();

           

            count2 = item.AspNetUserRoles.Count();
            }
            @Html.ActionLink("Locations(" + count + ")", "Index", "UserStore", new { id = item.Id }, null) |
            @Html.ActionLink("Permissions(" + count2 + ")", "Index", "Permission", new { id = item.Id }, null) |
            @Html.ActionLink("Change Password", "ChangePassword", new { id = item.Id }) |
            @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
        </td>



    </tr>
    }

    </table>

</form>
