//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebSync.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalesRecord", Namespace="http://schemas.datacontract.org/2004/07/RedDotService")]
    [System.SerializableAttribute()]
    public partial class SalesRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AdjustmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Custom1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Custom2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Custom3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Custom4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<WebSync.ServiceReference1.GratuityRecord> GratuityRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<WebSync.ServiceReference1.PaymentRecord> PaymentRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RewardExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<WebSync.ServiceReference1.SalesItemRecord> SaleItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SalesDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StationNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SubTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TicketNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Adjustment {
            get {
                return this.AdjustmentField;
            }
            set {
                if ((this.AdjustmentField.Equals(value) != true)) {
                    this.AdjustmentField = value;
                    this.RaisePropertyChanged("Adjustment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Custom1 {
            get {
                return this.Custom1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Custom1Field, value) != true)) {
                    this.Custom1Field = value;
                    this.RaisePropertyChanged("Custom1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Custom2 {
            get {
                return this.Custom2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Custom2Field, value) != true)) {
                    this.Custom2Field = value;
                    this.RaisePropertyChanged("Custom2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Custom3 {
            get {
                return this.Custom3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Custom3Field, value) != true)) {
                    this.Custom3Field = value;
                    this.RaisePropertyChanged("Custom3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Custom4 {
            get {
                return this.Custom4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Custom4Field, value) != true)) {
                    this.Custom4Field = value;
                    this.RaisePropertyChanged("Custom4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeId {
            get {
                return this.EmployeeIdField;
            }
            set {
                if ((this.EmployeeIdField.Equals(value) != true)) {
                    this.EmployeeIdField = value;
                    this.RaisePropertyChanged("EmployeeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WebSync.ServiceReference1.GratuityRecord> GratuityRecords {
            get {
                return this.GratuityRecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.GratuityRecordsField, value) != true)) {
                    this.GratuityRecordsField = value;
                    this.RaisePropertyChanged("GratuityRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdated {
            get {
                return this.LastUpdatedField;
            }
            set {
                if ((this.LastUpdatedField.Equals(value) != true)) {
                    this.LastUpdatedField = value;
                    this.RaisePropertyChanged("LastUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WebSync.ServiceReference1.PaymentRecord> PaymentRecords {
            get {
                return this.PaymentRecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentRecordsField, value) != true)) {
                    this.PaymentRecordsField = value;
                    this.RaisePropertyChanged("PaymentRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RewardException {
            get {
                return this.RewardExceptionField;
            }
            set {
                if ((this.RewardExceptionField.Equals(value) != true)) {
                    this.RewardExceptionField = value;
                    this.RaisePropertyChanged("RewardException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WebSync.ServiceReference1.SalesItemRecord> SaleItems {
            get {
                return this.SaleItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.SaleItemsField, value) != true)) {
                    this.SaleItemsField = value;
                    this.RaisePropertyChanged("SaleItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SalesDate {
            get {
                return this.SalesDateField;
            }
            set {
                if ((this.SalesDateField.Equals(value) != true)) {
                    this.SalesDateField = value;
                    this.RaisePropertyChanged("SalesDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StationNo {
            get {
                return this.StationNoField;
            }
            set {
                if ((this.StationNoField.Equals(value) != true)) {
                    this.StationNoField = value;
                    this.RaisePropertyChanged("StationNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SubTotal {
            get {
                return this.SubTotalField;
            }
            set {
                if ((this.SubTotalField.Equals(value) != true)) {
                    this.SubTotalField = value;
                    this.RaisePropertyChanged("SubTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketNo {
            get {
                return this.TicketNoField;
            }
            set {
                if ((this.TicketNoField.Equals(value) != true)) {
                    this.TicketNoField = value;
                    this.RaisePropertyChanged("TicketNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GratuityRecord", Namespace="http://schemas.datacontract.org/2004/07/RedDotService")]
    [System.SerializableAttribute()]
    public partial class GratuityRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TicketNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeId {
            get {
                return this.EmployeeIdField;
            }
            set {
                if ((this.EmployeeIdField.Equals(value) != true)) {
                    this.EmployeeIdField = value;
                    this.RaisePropertyChanged("EmployeeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketNo {
            get {
                return this.TicketNoField;
            }
            set {
                if ((this.TicketNoField.Equals(value) != true)) {
                    this.TicketNoField = value;
                    this.RaisePropertyChanged("TicketNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentRecord", Namespace="http://schemas.datacontract.org/2004/07/RedDotService")]
    [System.SerializableAttribute()]
    public partial class PaymentRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal NetAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TicketNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorCode {
            get {
                return this.AuthorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorCodeField, value) != true)) {
                    this.AuthorCodeField = value;
                    this.RaisePropertyChanged("AuthorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal NetAmount {
            get {
                return this.NetAmountField;
            }
            set {
                if ((this.NetAmountField.Equals(value) != true)) {
                    this.NetAmountField = value;
                    this.RaisePropertyChanged("NetAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketNo {
            get {
                return this.TicketNoField;
            }
            set {
                if ((this.TicketNoField.Equals(value) != true)) {
                    this.TicketNoField = value;
                    this.RaisePropertyChanged("TicketNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalesItemRecord", Namespace="http://schemas.datacontract.org/2004/07/RedDotService")]
    [System.SerializableAttribute()]
    public partial class SalesItemRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CommissionAmtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommissionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Custom1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Custom2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Custom3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Custom4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReportCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RewardAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RewardExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SupplyFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TicketNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TurnValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CommissionAmt {
            get {
                return this.CommissionAmtField;
            }
            set {
                if ((this.CommissionAmtField.Equals(value) != true)) {
                    this.CommissionAmtField = value;
                    this.RaisePropertyChanged("CommissionAmt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommissionType {
            get {
                return this.CommissionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CommissionTypeField, value) != true)) {
                    this.CommissionTypeField = value;
                    this.RaisePropertyChanged("CommissionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Custom1 {
            get {
                return this.Custom1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Custom1Field, value) != true)) {
                    this.Custom1Field = value;
                    this.RaisePropertyChanged("Custom1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Custom2 {
            get {
                return this.Custom2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Custom2Field, value) != true)) {
                    this.Custom2Field = value;
                    this.RaisePropertyChanged("Custom2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Custom3 {
            get {
                return this.Custom3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Custom3Field, value) != true)) {
                    this.Custom3Field = value;
                    this.RaisePropertyChanged("Custom3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Custom4 {
            get {
                return this.Custom4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Custom4Field, value) != true)) {
                    this.Custom4Field = value;
                    this.RaisePropertyChanged("Custom4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((this.DiscountField.Equals(value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeId {
            get {
                return this.EmployeeIdField;
            }
            set {
                if ((this.EmployeeIdField.Equals(value) != true)) {
                    this.EmployeeIdField = value;
                    this.RaisePropertyChanged("EmployeeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportCategory {
            get {
                return this.ReportCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportCategoryField, value) != true)) {
                    this.ReportCategoryField = value;
                    this.RaisePropertyChanged("ReportCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RewardAmount {
            get {
                return this.RewardAmountField;
            }
            set {
                if ((this.RewardAmountField.Equals(value) != true)) {
                    this.RewardAmountField = value;
                    this.RaisePropertyChanged("RewardAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RewardException {
            get {
                return this.RewardExceptionField;
            }
            set {
                if ((this.RewardExceptionField.Equals(value) != true)) {
                    this.RewardExceptionField = value;
                    this.RaisePropertyChanged("RewardException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SupplyFee {
            get {
                return this.SupplyFeeField;
            }
            set {
                if ((this.SupplyFeeField.Equals(value) != true)) {
                    this.SupplyFeeField = value;
                    this.RaisePropertyChanged("SupplyFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketNo {
            get {
                return this.TicketNoField;
            }
            set {
                if ((this.TicketNoField.Equals(value) != true)) {
                    this.TicketNoField = value;
                    this.RaisePropertyChanged("TicketNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TurnValue {
            get {
                return this.TurnValueField;
            }
            set {
                if ((this.TurnValueField.Equals(value) != true)) {
                    this.TurnValueField = value;
                    this.RaisePropertyChanged("TurnValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeRecord", Namespace="http://schemas.datacontract.org/2004/07/RedDotService")]
    [System.SerializableAttribute()]
    public partial class EmployeeRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiddleNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeId {
            get {
                return this.EmployeeIdField;
            }
            set {
                if ((this.EmployeeIdField.Equals(value) != true)) {
                    this.EmployeeIdField = value;
                    this.RaisePropertyChanged("EmployeeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LicenseRequest", Namespace="http://schemas.datacontract.org/2004/07/RedDotService")]
    [System.SerializableAttribute()]
    public partial class LicenseRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActivatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MachineIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Activated {
            get {
                return this.ActivatedField;
            }
            set {
                if ((this.ActivatedField.Equals(value) != true)) {
                    this.ActivatedField = value;
                    this.RaisePropertyChanged("Activated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Application {
            get {
                return this.ApplicationField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationField, value) != true)) {
                    this.ApplicationField = value;
                    this.RaisePropertyChanged("Application");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeString {
            get {
                return this.CodeStringField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeStringField, value) != true)) {
                    this.CodeStringField = value;
                    this.RaisePropertyChanged("CodeString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((object.ReferenceEquals(this.CreateDateField, value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MachineID {
            get {
                return this.MachineIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MachineIDField, value) != true)) {
                    this.MachineIDField = value;
                    this.RaisePropertyChanged("MachineID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/RedDotService")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cattypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string colorcodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string imagesrcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lettercodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int sortorderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string cattype {
            get {
                return this.cattypeField;
            }
            set {
                if ((object.ReferenceEquals(this.cattypeField, value) != true)) {
                    this.cattypeField = value;
                    this.RaisePropertyChanged("cattype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string colorcode {
            get {
                return this.colorcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.colorcodeField, value) != true)) {
                    this.colorcodeField = value;
                    this.RaisePropertyChanged("colorcode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string imagesrc {
            get {
                return this.imagesrcField;
            }
            set {
                if ((object.ReferenceEquals(this.imagesrcField, value) != true)) {
                    this.imagesrcField = value;
                    this.RaisePropertyChanged("imagesrc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lettercode {
            get {
                return this.lettercodeField;
            }
            set {
                if ((object.ReferenceEquals(this.lettercodeField, value) != true)) {
                    this.lettercodeField = value;
                    this.RaisePropertyChanged("lettercode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int sortorder {
            get {
                return this.sortorderField;
            }
            set {
                if ((this.sortorderField.Equals(value) != true)) {
                    this.sortorderField = value;
                    this.RaisePropertyChanged("sortorder");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ISalonService")]
    public interface ISalonService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/Authenticate", ReplyAction="http://tempuri.org/ISalonService/AuthenticateResponse")]
        string Authenticate(string storecode, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/Authenticate", ReplyAction="http://tempuri.org/ISalonService/AuthenticateResponse")]
        System.Threading.Tasks.Task<string> AuthenticateAsync(string storecode, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/CloseConnection", ReplyAction="http://tempuri.org/ISalonService/CloseConnectionResponse")]
        bool CloseConnection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/CloseConnection", ReplyAction="http://tempuri.org/ISalonService/CloseConnectionResponse")]
        System.Threading.Tasks.Task<bool> CloseConnectionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/RemoveTicket", ReplyAction="http://tempuri.org/ISalonService/RemoveTicketResponse")]
        bool RemoveTicket(int userid, int ticketno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/RemoveTicket", ReplyAction="http://tempuri.org/ISalonService/RemoveTicketResponse")]
        System.Threading.Tasks.Task<bool> RemoveTicketAsync(int userid, int ticketno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/WriteSalesTicket", ReplyAction="http://tempuri.org/ISalonService/WriteSalesTicketResponse")]
        string WriteSalesTicket(int clientid, WebSync.ServiceReference1.SalesRecord salesrecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/WriteSalesTicket", ReplyAction="http://tempuri.org/ISalonService/WriteSalesTicketResponse")]
        System.Threading.Tasks.Task<string> WriteSalesTicketAsync(int clientid, WebSync.ServiceReference1.SalesRecord salesrecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/WriteSalesItem", ReplyAction="http://tempuri.org/ISalonService/WriteSalesItemResponse")]
        string WriteSalesItem(int clientid, WebSync.ServiceReference1.SalesItemRecord salesitem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/WriteSalesItem", ReplyAction="http://tempuri.org/ISalonService/WriteSalesItemResponse")]
        System.Threading.Tasks.Task<string> WriteSalesItemAsync(int clientid, WebSync.ServiceReference1.SalesItemRecord salesitem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/WriteSalesPayment", ReplyAction="http://tempuri.org/ISalonService/WriteSalesPaymentResponse")]
        string WriteSalesPayment(int clientid, WebSync.ServiceReference1.PaymentRecord payment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/WriteSalesPayment", ReplyAction="http://tempuri.org/ISalonService/WriteSalesPaymentResponse")]
        System.Threading.Tasks.Task<string> WriteSalesPaymentAsync(int clientid, WebSync.ServiceReference1.PaymentRecord payment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/WriteSalesGratuity", ReplyAction="http://tempuri.org/ISalonService/WriteSalesGratuityResponse")]
        string WriteSalesGratuity(int clientid, WebSync.ServiceReference1.GratuityRecord gratuity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/WriteSalesGratuity", ReplyAction="http://tempuri.org/ISalonService/WriteSalesGratuityResponse")]
        System.Threading.Tasks.Task<string> WriteSalesGratuityAsync(int clientid, WebSync.ServiceReference1.GratuityRecord gratuity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/WriteEmployeeList", ReplyAction="http://tempuri.org/ISalonService/WriteEmployeeListResponse")]
        string WriteEmployeeList(int clientid, WebSync.ServiceReference1.EmployeeRecord employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/WriteEmployeeList", ReplyAction="http://tempuri.org/ISalonService/WriteEmployeeListResponse")]
        System.Threading.Tasks.Task<string> WriteEmployeeListAsync(int clientid, WebSync.ServiceReference1.EmployeeRecord employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/GetLicense", ReplyAction="http://tempuri.org/ISalonService/GetLicenseResponse")]
        WebSync.ServiceReference1.LicenseRequest GetLicense(WebSync.ServiceReference1.LicenseRequest request, string publickey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/GetLicense", ReplyAction="http://tempuri.org/ISalonService/GetLicenseResponse")]
        System.Threading.Tasks.Task<WebSync.ServiceReference1.LicenseRequest> GetLicenseAsync(WebSync.ServiceReference1.LicenseRequest request, string publickey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/WriteCategory", ReplyAction="http://tempuri.org/ISalonService/WriteCategoryResponse")]
        string WriteCategory(WebSync.ServiceReference1.Category cat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/WriteCategory", ReplyAction="http://tempuri.org/ISalonService/WriteCategoryResponse")]
        System.Threading.Tasks.Task<string> WriteCategoryAsync(WebSync.ServiceReference1.Category cat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/GetConnectionString", ReplyAction="http://tempuri.org/ISalonService/GetConnectionStringResponse")]
        string GetConnectionString();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/GetConnectionString", ReplyAction="http://tempuri.org/ISalonService/GetConnectionStringResponse")]
        System.Threading.Tasks.Task<string> GetConnectionStringAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/GetStatus", ReplyAction="http://tempuri.org/ISalonService/GetStatusResponse")]
        string GetStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISalonService/GetStatus", ReplyAction="http://tempuri.org/ISalonService/GetStatusResponse")]
        System.Threading.Tasks.Task<string> GetStatusAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISalonServiceChannel : WebSync.ServiceReference1.ISalonService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SalonServiceClient : System.ServiceModel.ClientBase<WebSync.ServiceReference1.ISalonService>, WebSync.ServiceReference1.ISalonService {
        
        public SalonServiceClient() {
        }
        
        public SalonServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SalonServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalonServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SalonServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Authenticate(string storecode, string password) {
            return base.Channel.Authenticate(storecode, password);
        }
        
        public System.Threading.Tasks.Task<string> AuthenticateAsync(string storecode, string password) {
            return base.Channel.AuthenticateAsync(storecode, password);
        }
        
        public bool CloseConnection() {
            return base.Channel.CloseConnection();
        }
        
        public System.Threading.Tasks.Task<bool> CloseConnectionAsync() {
            return base.Channel.CloseConnectionAsync();
        }
        
        public bool RemoveTicket(int userid, int ticketno) {
            return base.Channel.RemoveTicket(userid, ticketno);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveTicketAsync(int userid, int ticketno) {
            return base.Channel.RemoveTicketAsync(userid, ticketno);
        }
        
        public string WriteSalesTicket(int clientid, WebSync.ServiceReference1.SalesRecord salesrecord) {
            return base.Channel.WriteSalesTicket(clientid, salesrecord);
        }
        
        public System.Threading.Tasks.Task<string> WriteSalesTicketAsync(int clientid, WebSync.ServiceReference1.SalesRecord salesrecord) {
            return base.Channel.WriteSalesTicketAsync(clientid, salesrecord);
        }
        
        public string WriteSalesItem(int clientid, WebSync.ServiceReference1.SalesItemRecord salesitem) {
            return base.Channel.WriteSalesItem(clientid, salesitem);
        }
        
        public System.Threading.Tasks.Task<string> WriteSalesItemAsync(int clientid, WebSync.ServiceReference1.SalesItemRecord salesitem) {
            return base.Channel.WriteSalesItemAsync(clientid, salesitem);
        }
        
        public string WriteSalesPayment(int clientid, WebSync.ServiceReference1.PaymentRecord payment) {
            return base.Channel.WriteSalesPayment(clientid, payment);
        }
        
        public System.Threading.Tasks.Task<string> WriteSalesPaymentAsync(int clientid, WebSync.ServiceReference1.PaymentRecord payment) {
            return base.Channel.WriteSalesPaymentAsync(clientid, payment);
        }
        
        public string WriteSalesGratuity(int clientid, WebSync.ServiceReference1.GratuityRecord gratuity) {
            return base.Channel.WriteSalesGratuity(clientid, gratuity);
        }
        
        public System.Threading.Tasks.Task<string> WriteSalesGratuityAsync(int clientid, WebSync.ServiceReference1.GratuityRecord gratuity) {
            return base.Channel.WriteSalesGratuityAsync(clientid, gratuity);
        }
        
        public string WriteEmployeeList(int clientid, WebSync.ServiceReference1.EmployeeRecord employee) {
            return base.Channel.WriteEmployeeList(clientid, employee);
        }
        
        public System.Threading.Tasks.Task<string> WriteEmployeeListAsync(int clientid, WebSync.ServiceReference1.EmployeeRecord employee) {
            return base.Channel.WriteEmployeeListAsync(clientid, employee);
        }
        
        public WebSync.ServiceReference1.LicenseRequest GetLicense(WebSync.ServiceReference1.LicenseRequest request, string publickey) {
            return base.Channel.GetLicense(request, publickey);
        }
        
        public System.Threading.Tasks.Task<WebSync.ServiceReference1.LicenseRequest> GetLicenseAsync(WebSync.ServiceReference1.LicenseRequest request, string publickey) {
            return base.Channel.GetLicenseAsync(request, publickey);
        }
        
        public string WriteCategory(WebSync.ServiceReference1.Category cat) {
            return base.Channel.WriteCategory(cat);
        }
        
        public System.Threading.Tasks.Task<string> WriteCategoryAsync(WebSync.ServiceReference1.Category cat) {
            return base.Channel.WriteCategoryAsync(cat);
        }
        
        public string GetConnectionString() {
            return base.Channel.GetConnectionString();
        }
        
        public System.Threading.Tasks.Task<string> GetConnectionStringAsync() {
            return base.Channel.GetConnectionStringAsync();
        }
        
        public string GetStatus() {
            return base.Channel.GetStatus();
        }
        
        public System.Threading.Tasks.Task<string> GetStatusAsync() {
            return base.Channel.GetStatusAsync();
        }
    }
}
